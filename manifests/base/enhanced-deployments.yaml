# Enhanced deployments with well-architected framework improvements
# Product Catalog Service - Production Ready
apiVersion: apps/v1
kind: Deployment
metadata:
  name: product-catalog
  namespace: oceansurge
  labels:
    app: product-catalog
    tier: backend
    trailblazer.io/component: catalog
    storm-surge.io/demo: "conference"
    version: v1.0.0
spec:
  replicas: 3  # Increased for demo reliability
  selector:
    matchLabels:
      app: product-catalog
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: product-catalog
        tier: backend
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 101
        runAsGroup: 101
        fsGroup: 101
      # Anti-affinity for better distribution
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - product-catalog
              topologyKey: kubernetes.io/hostname
      containers:
      - name: product-catalog
        image: nginxinc/nginx-unprivileged:alpine
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
        env:
        - name: SERVICE_NAME
          value: "product-catalog"
        - name: TRAILBLAZER_COMPONENT
          value: "catalog"
        - name: LOG_LEVEL
          value: "INFO"
        - name: ENVIRONMENT
          value: "demo"
        - name: PORT
          value: "8080"
        - name: METRICS_ENABLED
          value: "true"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 10
        volumeMounts:
        - name: html
          mountPath: /usr/share/nginx/html
          readOnly: true
        - name: nginx-config
          mountPath: /etc/nginx/conf.d
          readOnly: true
        securityContext:
          runAsNonRoot: true
          runAsUser: 101
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: html
        configMap:
          name: product-catalog-html
      - name: nginx-config
        configMap:
          name: product-catalog-nginx
      terminationGracePeriodSeconds: 30

---
# Shopping Cart Service - Enhanced for scaling demos
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shopping-cart
  namespace: oceansurge
  labels:
    app: shopping-cart
    tier: backend
    trailblazer.io/component: cart
    storm-surge.io/demo: "conference"
    version: v1.0.0
spec:
  replicas: 2  # Start with 2 for scaling demo
  selector:
    matchLabels:
      app: shopping-cart
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 2  # Allow aggressive scaling for demo
  template:
    metadata:
      labels:
        app: shopping-cart
        tier: backend
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 101
        runAsGroup: 101
        fsGroup: 101
      # Anti-affinity for better distribution
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - shopping-cart
              topologyKey: kubernetes.io/hostname
        # Node affinity for multi-zone deployment
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 50
            preference:
              matchExpressions:
              - key: topology.kubernetes.io/zone
                operator: In
                values: ["zone-a", "zone-b", "zone-c"]
      containers:
      - name: shopping-cart
        image: nginxinc/nginx-unprivileged:alpine
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        resources:
          requests:
            cpu: 200m  # Higher for scaling demo
            memory: 256Mi
          limits:
            cpu: 1000m  # Allow higher CPU for scaling
            memory: 1Gi
        env:
        - name: SERVICE_NAME
          value: "shopping-cart"
        - name: TRAILBLAZER_COMPONENT
          value: "cart"
        - name: LOG_LEVEL
          value: "INFO"
        - name: ENVIRONMENT
          value: "demo"
        - name: PORT
          value: "8080"
        - name: ENABLE_METRICS
          value: "true"
        - name: CPU_LOAD_SIMULATION
          value: "true"  # For demo scaling
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 12
        volumeMounts:
        - name: html
          mountPath: /usr/share/nginx/html
          readOnly: true
        - name: nginx-config
          mountPath: /etc/nginx/conf.d
          readOnly: true
        - name: tmp
          mountPath: /tmp
        securityContext:
          runAsNonRoot: true
          runAsUser: 101
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: html
        configMap:
          name: shopping-cart-html
      - name: nginx-config
        configMap:
          name: shopping-cart-nginx
      - name: tmp
        emptyDir: {}
      terminationGracePeriodSeconds: 30

---
# Frontend Application - Conference Demo Ready
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: oceansurge
  labels:
    app: frontend
    tier: frontend
    trailblazer.io/component: frontend
    storm-surge.io/demo: "conference"
    version: v1.0.0
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0  # Zero downtime for demo
      maxSurge: 1
  template:
    metadata:
      labels:
        app: frontend
        tier: frontend
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 101
        runAsGroup: 101
        fsGroup: 101
      # Anti-affinity for better distribution
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - frontend
              topologyKey: kubernetes.io/hostname
      containers:
      - name: frontend
        image: nginxinc/nginx-unprivileged:alpine
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 300m  # Increased for demo responsiveness
            memory: 256Mi
        env:
        - name: SERVICE_NAME
          value: "frontend"
        - name: TRAILBLAZER_COMPONENT
          value: "frontend"
        - name: LOG_LEVEL
          value: "INFO"
        - name: ENVIRONMENT
          value: "demo"
        - name: PORT
          value: "8080"
        - name: BACKEND_URL
          value: "http://product-catalog-service:80"
        - name: CART_URL
          value: "http://shopping-cart-service:80"
        - name: DEMO_MODE
          value: "true"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 10
        volumeMounts:
        - name: config
          mountPath: /etc/nginx/conf.d
          readOnly: true
        - name: html
          mountPath: /usr/share/nginx/html
          readOnly: true
        - name: tmp
          mountPath: /tmp
        securityContext:
          runAsNonRoot: true
          runAsUser: 101
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: config
        configMap:
          name: frontend-config
      - name: html
        configMap:
          name: frontend-html
      - name: tmp
        emptyDir: {}
      terminationGracePeriodSeconds: 30