# Network Policies for Defense-in-Depth Security
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: deny-all-default
  namespace: oceansurge
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  # Default deny all - specific policies below will allow required traffic

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-frontend-ingress
  namespace: oceansurge
spec:
  podSelector:
    matchLabels:
      app: frontend
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from: []  # Allow ingress from anywhere (LoadBalancer)
    ports:
    - protocol: TCP
      port: 8080
  egress:
  # Allow DNS
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  # Allow HTTPS egress for external APIs
  - to: []
    ports:
    - protocol: TCP
      port: 443
  # Allow communication to backend services
  - to:
    - podSelector:
        matchLabels:
          tier: backend
    ports:
    - protocol: TCP
      port: 8080

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-backend-communication
  namespace: oceansurge
spec:
  podSelector:
    matchLabels:
      tier: backend
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow from frontend
  - from:
    - podSelector:
        matchLabels:
          tier: frontend
    ports:
    - protocol: TCP
      port: 8080
  # Allow from other backend services
  - from:
    - podSelector:
        matchLabels:
          tier: backend
    ports:
    - protocol: TCP
      port: 8080
  # Allow from middleware
  - from:
    - podSelector:
        matchLabels:
          app: feature-flag-middleware
    ports:
    - protocol: TCP
      port: 8080
  egress:
  # Allow DNS
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  # Allow HTTPS egress for external APIs
  - to: []
    ports:
    - protocol: TCP
      port: 443
  # Allow communication between backend services
  - to:
    - podSelector:
        matchLabels:
          tier: backend
    ports:
    - protocol: TCP
      port: 8080

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-middleware-communication
  namespace: oceansurge
spec:
  podSelector:
    matchLabels:
      app: feature-flag-middleware
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow webhook traffic from external sources
  - from: []
    ports:
    - protocol: TCP
      port: 8000
  egress:
  # Allow DNS
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  # Allow HTTPS egress for LaunchDarkly/Spot APIs
  - to: []
    ports:
    - protocol: TCP
      port: 443
  # Allow communication to Kubernetes API
  - to: []
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 6443
  # Allow communication to backend services
  - to:
    - podSelector:
        matchLabels:
          tier: backend
    ports:
    - protocol: TCP
      port: 8080

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-finops-communication
  namespace: oceansurge
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/component: finops
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow health checks
  - from: []
    ports:
    - protocol: TCP
      port: 8080
  egress:
  # Allow DNS
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  # Allow HTTPS egress for LaunchDarkly/Spot APIs
  - to: []
    ports:
    - protocol: TCP
      port: 443
  # Allow communication to Kubernetes API
  - to: []
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 6443

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-monitoring-ingress
  namespace: monitoring
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow scraping from anywhere (Prometheus)
  - from: []
    ports:
    - protocol: TCP
      port: 9090
    - protocol: TCP
      port: 3000
  # Allow inter-monitoring communication
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
  egress:
  # Allow DNS
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  # Allow HTTPS egress
  - to: []
    ports:
    - protocol: TCP
      port: 443
  # Allow Kubernetes API access for service discovery
  - to: []
    ports:
    - protocol: TCP
      port: 6443
  # Allow cross-namespace scraping
  - to:
    - namespaceSelector:
        matchLabels:
          name: oceansurge