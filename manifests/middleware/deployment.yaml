apiVersion: apps/v1
kind: Deployment
metadata:
  name: feature-flag-middleware
  namespace: oceansurge
spec:
  replicas: 1
  selector:
    matchLabels:
      app: feature-flag-middleware
  template:
    metadata:
      labels:
        app: feature-flag-middleware
    spec:
      serviceAccountName: middleware-sa
      automountServiceAccountToken: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      initContainers:
      - name: setup-python-env
        image: python:3.11-slim
        command: ['/bin/bash', '-c']
        args:
        - |
          cd /app
          export HOME=/tmp/home
          mkdir -p $HOME/.local
          pip install --user -r requirements.txt
          cp -r $HOME/.local /shared-deps/
        volumeMounts:
        - name: app-code
          mountPath: /app
          readOnly: true
        - name: shared-deps
          mountPath: /shared-deps
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
      containers:
      - name: middleware
        image: python:3.11-slim
        command: ['/bin/bash', '-c']
        args:
        - |
          export HOME=/tmp/home
          export PYTHONPATH=/shared-deps/.local/lib/python3.11/site-packages:$PYTHONPATH
          export PATH=/shared-deps/.local/bin:$PATH
          cd /app
          python main.py
        env:
        - name: FEATURE_FLAG_PROVIDER
          valueFrom:
            configMapKeyRef:
              name: feature-flag-config
              key: FEATURE_FLAG_PROVIDER
        - name: LOGGING_PROVIDER
          valueFrom:
            configMapKeyRef:
              name: feature-flag-config
              key: LOGGING_PROVIDER
        - name: LAUNCHDARKLY_SDK_KEY
          valueFrom:
            secretKeyRef:
              name: feature-flag-secrets
              key: ld-sdk-key
              optional: true
        - name: STATSIG_SERVER_KEY
          valueFrom:
            secretKeyRef:
              name: feature-flag-secrets
              key: statsig-server-key
              optional: true
        - name: SPOT_API_TOKEN
          valueFrom:
            secretKeyRef:
              name: feature-flag-secrets
              key: spot-api-token
        - name: SPOT_CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              name: feature-flag-config
              key: SPOT_CLUSTER_ID
        - name: WEBHOOK_SECRET
          valueFrom:
            secretKeyRef:
              name: feature-flag-secrets
              key: webhook-secret
        - name: COST_IMPACT_THRESHOLD
          valueFrom:
            configMapKeyRef:
              name: feature-flag-config
              key: COST_IMPACT_THRESHOLD
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: feature-flag-config
              key: LOG_LEVEL
        - name: ENVIRONMENT
          value: "production"
        - name: PORT
          value: "8000"
        - name: PYTHONUNBUFFERED
          value: "1"
        ports:
        - containerPort: 8000
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 15
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 20
        volumeMounts:
        - name: app-code
          mountPath: /app
          readOnly: true
        - name: shared-deps
          mountPath: /shared-deps
          readOnly: true
      volumes:
      - name: app-code
        configMap:
          name: middleware-code
          defaultMode: 0755
      - name: shared-deps
        emptyDir: {}
