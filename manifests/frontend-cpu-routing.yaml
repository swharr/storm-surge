# Updated Frontend Configuration to Route to CPU-Intensive Services

apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend-config-cpu-routing
  namespace: oceansurge
data:
  default.conf: |
    upstream shopping-cart-cpu {
        server shopping-cart-cpu-service:80;
    }
    upstream product-catalog-cpu {
        server product-catalog-cpu-service:80;
    }
    # Keep the static services for fallback
    upstream shopping-cart-static {
        server shopping-cart-fixed-service:80;
    }
    upstream product-catalog-static {
        server product-catalog-fixed-service:80;
    }

    server {
        listen 8080;
        server_name localhost;

        location / {
            root /usr/share/nginx/html;
            index index.html;
        }

        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Route API calls to CPU-intensive services
        location /api/cart/ {
            proxy_pass http://shopping-cart-cpu/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
        }

        location /api/products/ {
            proxy_pass http://product-catalog-cpu/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
        }

        # Load testing endpoints for variable intensity
        location /api/cart/load/ {
            proxy_pass http://shopping-cart-cpu/load/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /api/products/search/ {
            proxy_pass http://product-catalog-cpu/search/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Static fallback endpoints (for comparison)
        location /static/cart/ {
            proxy_pass http://shopping-cart-static/;
        }

        location /static/products/ {
            proxy_pass http://product-catalog-static/;
        }
    }

---
# Update the frontend deployment to use new config
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-cpu-routing
  namespace: oceansurge
  labels:
    app: frontend-cpu-routing
    tier: frontend
    storm-surge.io/component: frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend-cpu-routing
  template:
    metadata:
      labels:
        app: frontend-cpu-routing
        tier: frontend
    spec:
      containers:
      - name: frontend
        image: nginx:alpine
        ports:
        - containerPort: 8080
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi
        volumeMounts:
        - name: config
          mountPath: /etc/nginx/conf.d
        - name: html
          mountPath: /usr/share/nginx/html
        - name: nginx-cache
          mountPath: /var/cache/nginx
        - name: nginx-run
          mountPath: /var/run
      volumes:
      - name: config
        configMap:
          name: frontend-config-cpu-routing
      - name: html
        configMap:
          name: frontend-html
      - name: nginx-cache
        emptyDir: {}
      - name: nginx-run
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: frontend-cpu-routing-service
  namespace: oceansurge
spec:
  selector:
    app: frontend-cpu-routing
  ports:
  - port: 80
    targetPort: 8080
  type: LoadBalancer