# Secure Ingress with TLS Configuration
apiVersion: v1
kind: Secret
metadata:
  name: storm-surge-tls
  namespace: oceansurge
type: kubernetes.io/tls
data:
  # These are placeholders - use cert-manager or your cloud provider's certificate service
  # Generate with: kubectl create secret tls storm-surge-tls --cert=path/to/cert.crt --key=path/to/cert.key
  tls.crt: ""  # Base64 encoded certificate
  tls.key: ""  # Base64 encoded private key
---
# Production Ingress with TLS and security headers
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: storm-surge-ingress-secure
  namespace: oceansurge
  annotations:
    # Force HTTPS redirect
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-protocols: "TLSv1.2 TLSv1.3"
    nginx.ingress.kubernetes.io/ssl-ciphers: "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256"
    
    # Security headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-XSS-Protection: 1; mode=block";
      more_set_headers "Strict-Transport-Security: max-age=31536000; includeSubDomains; preload";
      more_set_headers "Content-Security-Policy: default-src 'self'; script-src 'self' 'unsafe-inline' https://cdnjs.cloudflare.com; style-src 'self' 'unsafe-inline' https://cdnjs.cloudflare.com; font-src 'self' https://cdnjs.cloudflare.com; img-src 'self' data: https:; connect-src 'self' https://api.spotinst.io https://app.launchdarkly.com https://api.statsig.com";
      more_set_headers "Referrer-Policy: strict-origin-when-cross-origin";
      more_set_headers "Permissions-Policy: geolocation=(), microphone=(), camera=()";
    
    # Rate limiting
    nginx.ingress.kubernetes.io/limit-rps: "10"
    nginx.ingress.kubernetes.io/limit-connections: "20"
    nginx.ingress.kubernetes.io/limit-rpm: "300"
    
    # Body size limits
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    
    # Timeouts
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "10"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    
    # Enable CORS with specific origins
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://storm-surge.io, https://app.storm-surge.io"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    
    # Optional: Use cert-manager for automatic certificate management
    # cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - storm-surge.io
    - app.storm-surge.io
    - api.storm-surge.io
    secretName: storm-surge-tls
  rules:
  # Main application
  - host: storm-surge.io
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend-service
            port:
              number: 80
  # App subdomain
  - host: app.storm-surge.io
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend-service
            port:
              number: 80
  # API subdomain
  - host: api.storm-surge.io
    http:
      paths:
      - path: /api/products
        pathType: Prefix
        backend:
          service:
            name: product-catalog-service
            port:
              number: 80
      - path: /api/cart
        pathType: Prefix
        backend:
          service:
            name: shopping-cart-service
            port:
              number: 80
      - path: /webhook
        pathType: Prefix
        backend:
          service:
            name: middleware-service
            port:
              number: 5000
---
# Certificate Issuer for cert-manager (optional - requires cert-manager installation)
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: admin@storm-surge.io  # Replace with your email
    privateKeySecretRef:
      name: letsencrypt-prod-key
    solvers:
    - http01:
        ingress:
          class: nginx