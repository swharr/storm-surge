# Production Monitoring and Alerting Configuration
# Real-world security monitoring for Kubernetes at scale

---
# 1. ServiceMonitor for Prometheus
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: storm-surge-api-metrics
  namespace: storm-surge-prod
  labels:
    app: storm-surge
    monitoring: prometheus
spec:
  selector:
    matchLabels:
      tier: api
  endpoints:
  - port: http
    path: /metrics
    interval: 30s
    scrapeTimeout: 10s

---
# 2. PrometheusRule for Security Alerts
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: storm-surge-security-alerts
  namespace: storm-surge-prod
  labels:
    prometheus: kube-prometheus
    role: alert-rules
spec:
  groups:
  - name: security.rules
    interval: 30s
    rules:
    # Authentication failures
    - alert: HighAuthenticationFailureRate
      expr: |
        rate(authentication_attempts_total{result="failed"}[5m]) > 0.1
      for: 2m
      labels:
        severity: warning
        team: security
      annotations:
        summary: "High authentication failure rate detected"
        description: "Authentication failures at {{ $value | humanize }} per second"
        runbook_url: "https://wiki.example.com/runbooks/auth-failures"
    
    # Potential brute force attack
    - alert: PotentialBruteForceAttack
      expr: |
        rate(authentication_attempts_total{result="failed"}[5m]) > 1
      for: 1m
      labels:
        severity: critical
        team: security
        pager: true
      annotations:
        summary: "Potential brute force attack detected"
        description: "{{ $value | humanize }} failed authentication attempts per second"
        
    # Rate limiting triggered
    - alert: RateLimitingActive
      expr: |
        rate(rate_limit_exceeded_total[5m]) > 0.5
      for: 5m
      labels:
        severity: warning
        team: platform
      annotations:
        summary: "High rate of rate limit violations"
        description: "{{ $labels.endpoint }} endpoint experiencing {{ $value | humanize }} rate limit violations per second"
    
    # Database connection issues
    - alert: DatabaseConnectionPoolExhausted
      expr: |
        database_connections_active / database_connections_max > 0.9
      for: 5m
      labels:
        severity: critical
        team: platform
      annotations:
        summary: "Database connection pool nearly exhausted"
        description: "{{ $value | humanizePercentage }} of database connections in use"
    
    # High error rate
    - alert: HighErrorRate
      expr: |
        rate(http_requests_total{status=~"5.."}[5m]) > 0.05
      for: 5m
      labels:
        severity: warning
        team: platform
      annotations:
        summary: "High error rate detected"
        description: "{{ $labels.endpoint }} returning {{ $value | humanize }} errors per second"
    
    # Slow response times
    - alert: SlowResponseTime
      expr: |
        histogram_quantile(0.95, rate(http_request_duration_seconds_bucket[5m])) > 1
      for: 10m
      labels:
        severity: warning
        team: platform
      annotations:
        summary: "Slow API response times"
        description: "95th percentile response time is {{ $value | humanizeDuration }}"
    
    # Pod restart loops
    - alert: PodCrashLooping
      expr: |
        rate(kube_pod_container_status_restarts_total{namespace="storm-surge-prod"}[15m]) > 0
      for: 5m
      labels:
        severity: critical
        team: platform
      annotations:
        summary: "Pod {{ $labels.pod }} is crash looping"
        description: "Pod has restarted {{ $value }} times in the last 15 minutes"
    
    # Certificate expiration
    - alert: CertificateExpiringSoon
      expr: |
        certmanager_certificate_expiration_timestamp_seconds - time() < 7 * 24 * 3600
      for: 1h
      labels:
        severity: warning
        team: platform
      annotations:
        summary: "Certificate expiring soon"
        description: "Certificate {{ $labels.name }} expires in {{ $value | humanizeDuration }}"

---
# 3. Grafana Dashboard ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: storm-surge-security-dashboard
  namespace: storm-surge-prod
data:
  dashboard.json: |
    {
      "dashboard": {
        "title": "Storm Surge Security Dashboard",
        "panels": [
          {
            "title": "Authentication Attempts",
            "targets": [
              {
                "expr": "rate(authentication_attempts_total[5m])",
                "legendFormat": "{{ result }}"
              }
            ]
          },
          {
            "title": "Rate Limit Violations",
            "targets": [
              {
                "expr": "rate(rate_limit_exceeded_total[5m])",
                "legendFormat": "{{ endpoint }}"
              }
            ]
          },
          {
            "title": "API Response Times (p95)",
            "targets": [
              {
                "expr": "histogram_quantile(0.95, rate(http_request_duration_seconds_bucket[5m]))",
                "legendFormat": "{{ endpoint }}"
              }
            ]
          },
          {
            "title": "Error Rate by Endpoint",
            "targets": [
              {
                "expr": "rate(http_requests_total{status=~\"5..\"}[5m])",
                "legendFormat": "{{ endpoint }} - {{ status }}"
              }
            ]
          },
          {
            "title": "Active Database Connections",
            "targets": [
              {
                "expr": "database_connections_active"
              }
            ]
          },
          {
            "title": "Cache Hit Rate",
            "targets": [
              {
                "expr": "rate(cache_hits_total[5m]) / (rate(cache_hits_total[5m]) + rate(cache_misses_total[5m]))",
                "legendFormat": "{{ operation }}"
              }
            ]
          }
        ]
      }
    }

---
# 4. Logging Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluent-bit-config
  namespace: storm-surge-prod
data:
  fluent-bit.conf: |
    [SERVICE]
        Flush         5
        Log_Level     info
        Daemon        off

    [INPUT]
        Name              tail
        Path              /var/log/containers/*storm-surge*.log
        Parser            docker
        Tag               kube.*
        Refresh_Interval  5
        Mem_Buf_Limit     50MB
        Skip_Long_Lines   On

    [FILTER]
        Name                kubernetes
        Match               kube.*
        Kube_URL            https://kubernetes.default.svc:443
        Kube_CA_File        /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        Kube_Token_File     /var/run/secrets/kubernetes.io/serviceaccount/token
        Merge_Log           On
        K8S-Logging.Parser  On
        K8S-Logging.Exclude On

    [FILTER]
        Name    grep
        Match   kube.*
        Regex   log (error|ERROR|Error|CRITICAL|SECURITY)

    [OUTPUT]
        Name            es
        Match           kube.*
        Host            elasticsearch
        Port            9200
        Index           storm-surge
        Type            _doc
        Retry_Limit     5

---
# 5. Security Audit Policy
apiVersion: audit.k8s.io/v1
kind: Policy
metadata:
  name: storm-surge-audit-policy
rules:
  # Log all requests to sensitive resources
  - level: RequestResponse
    omitStages:
    - RequestReceived
    resources:
    - group: ""
      resources: ["secrets", "configmaps"]
    namespaces: ["storm-surge-prod"]
    
  # Log authentication failures
  - level: Metadata
    omitStages:
    - RequestReceived
    users: ["system:anonymous"]
    verbs: ["get", "list"]
    
  # Log all deletion operations
  - level: RequestResponse
    omitStages:
    - RequestReceived
    verbs: ["delete", "deletecollection"]
    
  # Log pod exec and port-forward
  - level: Metadata
    omitStages:
    - RequestReceived
    resources:
    - group: ""
      resources: ["pods/exec", "pods/portforward"]